class Solution:
    def longestConsecutive(self, nums: List[int]) -> int:
        # Brute Force O(n^2) : n-length of array
        output = 0
        for num in nums:
            curr, count = num, 0
            while curr in nums:
                count += 1
                curr += 1
            output = max(output, count)
        return output

        # Sorting O(nlogn) : n-length of array
        if not nums:
            return 0
        nums.sort()
        output = 1
        count = 1
        for i in range(len(nums)):
            if nums[i] == nums[i-1]:
                continue
            elif nums[i] == nums[i-1] + 1:
                count += 1
            else:
                count = 1
            output = max(output, count)
        return output

        # Hashmap O(n) : n-length of array
        if not nums:
            return 0
        map = set(nums)
        output = 0
        for num in map:
            if num - 1 not in map:
                count = 1
                while num + count in map:
                    count += 1
                output = max(output, count)
        return output
