class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        # Brute Force O(n^2) : n-length of array
        for i in range(len(nums)):
            for j in range(i+1, len(nums)):
                if nums[i] + nums[j] == target:
                    return [i, j]
        return []

        # Sorting O(nlogn) : n-length of array
        arr = []
        for i in range(len(nums)):
            arr.append([nums[i], i])
        arr.sort()
        i, j = 0, len(nums) - 1
        while i < j:
            if (arr[i][0] + arr[j][0]) == target:
                return [arr[i][1], arr[j][1]]
            elif (arr[i][0] + arr[j][0]) < target:
                i += 1
            else:
                j -= 1
        return []

        # Hashmap O(n) : n-length of array
        map = {} # value : index
        for i in range(len(nums)):
            if target - nums[i] in map:
                return [map[target - nums[i]], i]
            map[nums[i]] = i
        return []
