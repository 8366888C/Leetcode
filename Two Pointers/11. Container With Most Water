class Solution:
    def maxArea(self, height: List[int]) -> int:
        # Brute Force O(n^2) : n-length of array
        output = 0
        for i in range(len(height)):
            for j in range(i+1, len(height)):
                output = max(output, min(height[i], height[j]) * (j-i))
        return output

        # Two Pointers O(n) : n-length of array
        l, r = 0, len(height)-1
        output = 0
        while l < r:
            output = max(output, min(height[l], height[r]) * (r-l))
            if height[l] > height[r]:
                r -= 1
            else:
                l += 1
        return output

        # Two Pointers O(n) : n-length of array
        l, r = 0, len(height) - 1
        output = 0
        while l < r:
            hl, hr = height[l], height[r]
            output = max(output, min(hl, hr) * (r-l))
            if hl > hr:
                r -= 1
                while l < r and height[r] <= hr:
                    r -= 1
            else:
                l += 1
                while l < r and height[l] <= hl:
                    l += 1
        return output
