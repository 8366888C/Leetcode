# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        # Recursion O(n) : n-length of array
        # if not head:
        #     return None
        # _head = head
        # if head.next:
        #     _head = self.reverseList(head.next)
        #     head.next.next = head
        # head.next = None
        # return _head

        # Two Pointers O(n) : n-length of array
        curr, prev = head, None
        while curr:
            temp = curr.next
            curr.next = prev
            prev = curr
            curr = temp
        return prev
