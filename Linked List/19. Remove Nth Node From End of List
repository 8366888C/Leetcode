# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        # Hashmap O(n) : n-length of array
        nodes = []
        curr = head
        while curr:
            nodes.append(curr)
            curr = curr.next
        idx = len(nodes) - n
        if idx == 0:
            return head.next
        prev = nodes[idx - 1]
        nodes[idx-1].next = nodes[idx].next
        return head

        # Two Pointers O(n) : n-length of array
        dummy = ListNode(0, head)
        l, r = dummy, head
        while n > 0:
            r = r.next
            n -= 1
        while r:
            l = l.next
            r = r.next
        l.next = l.next.next
        return dummy.next
