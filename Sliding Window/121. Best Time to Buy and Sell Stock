class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        # Brute Force O(n^2) : n-length of array
        output = 0
        for i in range(len(prices)):
            buy = prices[i]
            for j in range(i+1, len(prices)):
                sell = prices[j]
                output = max(output, (sell - buy))
        return output

        # Two Pointers O(n) : n-length of array
        l, r = 0, 1
        output = 0
        while r < len(prices):
            if prices[l] < prices[r]:
                output = max(output, (prices[r] - prices[l]))
            else:
                l = r
            r += 1
        return output

        # Dynamic Programming O(n) : n-length of array
        output = 0
        buy = prices[0]
        for sell in prices:
            if sell < buy:
                buy = sell
            elif sell-buy > output:
                output = sell - buy
        return output
